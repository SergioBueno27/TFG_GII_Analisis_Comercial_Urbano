{% extends 'base.html.twig' %}
{% block title %}Análisis comercial urbano-Data
{% endblock %}

{% block containers %}
<!-- Tener en cuenta que los valores iniciales habrá que cambiarlos en caso de ser necesario -->

{% if  app.request.get('_route')[0:4] != 'all_' %}
<div class="container">
	<div class="margin_top">Seleccione código postal</div>
	<div class=" margin_bottom">
		<select onchange="getZipcodeData()" name="zipcode" id="zipcode" class="container-element">
			{% for zipcode in zipcodes %}
				{% if zipcode == selectedZipcode %}
					<option value ="{{ zipcode }}" selected = "selected">{{ zipcode }}</option>
				{% else %}
					<option value = "{{ zipcode }}" >{{ zipcode }}</option>
				{% endif %}
			{% endfor %}
		</select> 
	</div>
</div>
{% endif %}
<div class="container">
	<div id="myGrid" class="ag-theme-balham-dark">
		<script type="text/javascript" charset="utf-8">
			var rowData = [JSON.parse("{{ data|escape('js') }}")];
			var rowData = rowData[0];
			var columnDefs = [JSON.parse("{{ columnDefs|escape('js') }}")];
			var columnDefs = columnDefs[0];
			// let the grid know which columns and what data to use
			// Recibo los dos valores como string por lo que tengo 
			// que cambiar el valor por el de las variables javascript
			var gridOptions = JSON.parse("{{ gridOptions|escape('js') }}");
			gridOptions.columnDefs = columnDefs;
			gridOptions.rowData = rowData;
			var eGridDiv = document.querySelector('#myGrid');

			new agGrid.Grid(eGridDiv, gridOptions);

			function getZipcodeData() {
				value = document.getElementById("zipcode").value;
				//Recojo la ruta actual para hacer la redirección
				let url = "{{ path(app.request.attributes.get('_route'), {'zipcode': 'value' })|escape('js') }}";
				url = url.replace("value", value);
				window.location.href = url;
			}

			// Funciones necesarias para exportar datos como csv
			function getParams() {
				return {
					suppressQuotes: true,
					columnSeparator: ',',
					customHeader: '',
					customFooter: '',
				};
			}
			function onBtnExport() {
				var params = getParams();
				gridOptions.api.exportDataAsCsv(params);
			}

		</script>
	</div>
</div>
<div class="container">
	<a class="margin_top margin_bottom button" onclick="onBtnExport()">Descargar tabla como fichero csv</a>
</div>
{% if is_granted('ROLE_ADMIN') %}
	{% if  app.request.get('_route')[0:4] != 'all_' %}

		<script type="text/javascript" charset="utf-8">
			addEventListener("load",function(){
				document.querySelectorAll('.longTime').forEach(longTime => {
					longTime.addEventListener('click',event =>{
						event.preventDefault();
						Swal.fire({
						icon: "info",
						text: "La operación puede tardar entre 1-5 minutos se paciente",
						showCancelButton: true,
						cancelButtonColor: "#DD6B55",
						confirmButtonText: "Si",
						cancelButtonText: "No",
						closeOnConfirm: false
					}).then((result) => {
					if (result.value) {
						window.location.href=longTime;
					}
					});
						
					})
				});
			});
					
				
			
		</script>
		<div class="container">
			<a class= "margin_top margin_bottom container-element button longTime" href="{{path('all_'~app.request.attributes.get('_route'))}}">Mostrar todos los datos</a >
		</div>
	{% endif %}
{% endif %}
{% endblock %}
{% block javascript %}
{% endblock %}